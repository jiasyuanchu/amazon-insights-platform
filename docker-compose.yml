version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: amazon_insights_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: amazon_insights
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: amazon_insights_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: amazon_insights_api
    environment:
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/amazon_insights
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon_insights_celery_worker
    environment:
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/amazon_insights
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.app.tasks.celery_app worker --loglevel=info -Q scraping,monitoring,analysis,maintenance

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon_insights_celery_beat
    environment:
      - SECRET_KEY=dev-secret-key-change-in-production
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/amazon_insights
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: celery -A src.app.tasks.celery_app beat --loglevel=info

  flower:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon_insights_flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
    ports:
      - "5555:5555"
    depends_on:
      - redis
    command: celery -A src.app.tasks.celery_app flower --port=5555

volumes:
  postgres_data:
  redis_data: